{"version":3,"sources":["components/UI/Card.js","components/goals/GoalInput.js","components/goals/GoalItem.js","components/goals/CourseGoals.js","components/UI/ErrorAlert.js","App.js","index.js"],"names":["Card","props","React","createElement","className","children","GoalInput","enteredGoalText","setEnteredGoalText","useState","id","onSubmit","event","preventDefault","trim","length","onAddGoal","alert","htmlFor","type","value","onChange","target","GoalItem","onClick","onDelete","bind","text","CourseGoals","hasNoGoals","goals","map","goal","key","onDeleteGoal","ErrorAlert","errorText","App","loadedGoals","setLoadedGoals","isLoading","setIsLoading","error","setError","useEffect","async","response","fetch","resData","json","ok","Error","message","err","fetchData","goalText","method","body","JSON","stringify","headers","Content-Type","prevGoals","goalId","filter","ReactDOM","createRoot","document","getElementById","render"],"mappings":"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","file":"static/js/main.59f749ce.chunk.js","sourcesContent":["import React from 'react';\n\nimport './Card.css';\n\nfunction Card(props) {\n  return <div className='card'>{props.children}</div>;\n}\n\nexport default Card;\n","import React, { useState } from 'react';\n\nimport './GoalInput.css';\nimport Card from '../UI/Card';\n\nfunction GoalInput(props) {\n  const [enteredGoalText, setEnteredGoalText] = useState('');\n\n  function updateGoalTextHandler(event) {\n    setEnteredGoalText(event.target.value);\n  }\n\n  function goalSubmitHandler(event) {\n    event.preventDefault();\n\n    if (enteredGoalText.trim().length === 0) {\n      alert('Invalid text - please enter a longer one!');\n      return;\n    }\n\n    props.onAddGoal(enteredGoalText);\n\n    setEnteredGoalText('');\n  }\n\n  return (\n    <section id='goal-input'>\n      <Card>\n        <form onSubmit={goalSubmitHandler}>\n          <label htmlFor='text'>New Goal</label>\n          <input\n            type='text'\n            id='text'\n            value={enteredGoalText}\n            onChange={updateGoalTextHandler}\n          />\n          <button>Add Goal</button>\n        </form>\n      </Card>\n    </section>\n  );\n}\n\nexport default GoalInput;\n","import React from 'react';\n\nimport './GoalItem.css';\n\nfunction GoalItem(props) {\n  return <li className=\"goal-item\" onClick={props.onDelete.bind(null, props.id)}>{props.text}</li>;\n}\n\nexport default GoalItem;\n","import React from 'react';\n\nimport './CourseGoals.css';\nimport Card from '../UI/Card';\nimport GoalItem from './GoalItem';\n\nfunction CourseGoals(props) {\n  const hasNoGoals = !props.goals || props.goals.length === 0;\n\n  return (\n    <section id='course-goals'>\n      <Card>\n        {hasNoGoals && <h2>No goals found. Start adding some!</h2>}\n        <ul>\n          {props.goals.map((goal) => (\n            <GoalItem\n              key={goal.id}\n              id={goal.id}\n              text={goal.text}\n              onDelete={props.onDeleteGoal}\n            />\n          ))}\n        </ul>\n      </Card>\n    </section>\n  );\n}\n\nexport default CourseGoals;\n","import React from 'react';\n\nimport './ErrorAlert.css';\n\nfunction ErrorAlert(props) {\n  return (\n    <section className='error-alert'>\n      <h2>Something went wrong!</h2>\n      <p>{props.errorText}</p>\n    </section>\n  );\n}\n\nexport default ErrorAlert;\n","import React, { useState, useEffect } from 'react';\n\nimport GoalInput from './components/goals/GoalInput';\nimport CourseGoals from './components/goals/CourseGoals';\nimport ErrorAlert from './components/UI/ErrorAlert';\n\nfunction App() {\n  const [loadedGoals, setLoadedGoals] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(null);\n\n  useEffect(function () {\n    async function fetchData() {\n      setIsLoading(true);\n\n      try {\n        const response = await fetch('http://localhost/goals');\n\n        const resData = await response.json();\n\n        if (!response.ok) {\n          throw new Error(resData.message || 'Fetching the goals failed.');\n        }\n\n        setLoadedGoals(resData.goals);\n      } catch (err) {\n        setError(\n          err.message ||\n            'Fetching goals failed - the server responsed with an error.'\n        );\n      }\n      setIsLoading(false);\n    }\n\n    fetchData();\n  }, []);\n\n  async function addGoalHandler(goalText) {\n    setIsLoading(true);\n\n    try {\n      const response = await fetch('http://localhost/goals', {\n        method: 'POST',\n        body: JSON.stringify({\n          text: goalText,\n        }),\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      });\n\n      const resData = await response.json();\n\n      if (!response.ok) {\n        throw new Error(resData.message || 'Adding the goal failed.');\n      }\n\n      setLoadedGoals((prevGoals) => {\n        const updatedGoals = [\n          {\n            id: resData.goal.id,\n            text: goalText,\n          },\n          ...prevGoals,\n        ];\n        return updatedGoals;\n      });\n    } catch (err) {\n      setError(\n        err.message ||\n          'Adding a goal failed - the server responsed with an error.'\n      );\n    }\n    setIsLoading(false);\n  }\n\n  async function deleteGoalHandler(goalId) {\n    setIsLoading(true);\n\n    try {\n      const response = await fetch('http://localhost/goals/' + goalId, {\n        method: 'DELETE',\n      });\n\n      const resData = await response.json();\n\n      if (!response.ok) {\n        throw new Error(resData.message || 'Deleting the goal failed.');\n      }\n\n      setLoadedGoals((prevGoals) => {\n        const updatedGoals = prevGoals.filter((goal) => goal.id !== goalId);\n        return updatedGoals;\n      });\n    } catch (err) {\n      setError(\n        err.message ||\n          'Deleting the goal failed - the server responsed with an error.'\n      );\n    }\n    setIsLoading(false);\n  }\n\n  return (\n    <div>\n      {error && <ErrorAlert errorText={error} />}\n      <GoalInput onAddGoal={addGoalHandler} />\n      {!isLoading && (\n        <CourseGoals goals={loadedGoals} onDeleteGoal={deleteGoalHandler} />\n      )}\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\n\nimport './index.css';\nimport App from './App';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(<App />);\n\n"],"sourceRoot":""}